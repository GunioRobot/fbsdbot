grammar IRC
    rule message
        pre:(':' prefix space)? command params crlf <MessageNode>
    end

    rule prefix
        host { def value; {:host => text_value}; end }
        / 
        nick ( '!' user )? ( '@' host:(host / cloak) )? <PrefixNode>
    end

    rule command
        letter+  / digit digit digit
    end

    rule space
        ' '+
    end

    rule letter
        [a-zA-Z]
    end

    rule host
        host_address / host_name
    end
    
    rule host_address
        number "." number "." number "." number
        # does not guarantee 0-255
    end
    
    rule host_name
        netname ("." netname)+
    end
    
    rule netname
      letter (letter / digit / '-')*
    end
    
    rule nick
        letter (letter / number / special)*
    end
    
    rule cloak
        nonspace+
    end
    
    rule special
        '-' / '[' / ']' / '\\' / '`' / '^' / '{' / '}'
    end

    rule user
        nonspace+
    end

    rule nonspace
        [^\r\n\0!@ ]
    end

    rule params
        space receiver:(target space)? msg:( ':' trailing / middle params ) {
            def value
                r = {:message => msg.trailing.text_value}
                r[:to] = receiver.target.to.text_value if respond_to?(:receiver)
                r
            end
        }
    end
    
    rule target
        to (',' target)*
    end
    
    rule to
        channel / user '@' host / nick / mask
    end
    
    rule channel
        ('#' / '&') chstring
    end
    
    rule mask
        ('#' / '$') chstring        
    end
    
    rule chstring
        [^ \7\0\r\n,]+
    end
    
    rule number
        digit+
    end
    
    rule digit
        [0-9]
    end

    rule trailing
        [^\r\n\0]+
    end

    rule middle
        nonspace+
    end

    rule crlf
        "\r\n"
    end

end