# line 1 "irc.rl"
# IRC Ragel parser

# line 98 "irc.rl"


module FBSDBot
  module IRC
    module Parser
    
      
# line 13 "parser.rb"
class << self
	attr_accessor :_irc_actions
	private :_irc_actions, :_irc_actions=
end
self._irc_actions = [
	0, 1, 1, 1, 3, 1, 4, 1, 
	5, 1, 6, 1, 9, 1, 10, 2, 
	0, 1, 2, 2, 7, 2, 3, 4, 
	2, 8, 9, 2, 8, 10, 3, 2, 
	7, 10
]

class << self
	attr_accessor :_irc_key_offsets
	private :_irc_key_offsets, :_irc_key_offsets=
end
self._irc_key_offsets = [
	0, 0, 7, 9, 11, 13, 14, 19, 
	23, 28, 32, 37, 41, 46, 50, 55, 
	59, 64, 68, 73, 77, 82, 86, 91, 
	95, 100, 104, 109, 113, 118, 122, 127, 
	131, 136, 140, 144, 147, 150, 160, 170, 
	176, 182, 188, 204, 210, 216, 227, 242, 
	252, 258, 273, 279, 286, 292, 299, 305, 
	312, 318, 325, 331, 338, 344, 351, 357, 
	364, 371, 378, 385, 392, 399, 406, 413, 
	420, 429, 436, 442, 450, 452, 455, 457, 
	460, 462, 465, 468, 469, 472, 473, 476, 
	477, 485, 493, 502, 511, 520, 536, 552, 
	568, 584, 600, 616, 632, 648, 664, 680, 
	696, 712, 728, 744, 756, 759, 767, 775, 
	783, 791, 799, 807, 815, 823, 831, 839, 
	847, 855, 863, 871, 879
]

class << self
	attr_accessor :_irc_trans_keys
	private :_irc_trans_keys, :_irc_trans_keys=
end
self._irc_trans_keys = [
	58, 48, 57, 65, 90, 97, 122, 48, 
	57, 48, 57, 13, 32, 10, 0, 10, 
	13, 32, 58, 0, 10, 13, 32, 0, 
	10, 13, 32, 58, 0, 10, 13, 32, 
	0, 10, 13, 32, 58, 0, 10, 13, 
	32, 0, 10, 13, 32, 58, 0, 10, 
	13, 32, 0, 10, 13, 32, 58, 0, 
	10, 13, 32, 0, 10, 13, 32, 58, 
	0, 10, 13, 32, 0, 10, 13, 32, 
	58, 0, 10, 13, 32, 0, 10, 13, 
	32, 58, 0, 10, 13, 32, 0, 10, 
	13, 32, 58, 0, 10, 13, 32, 0, 
	10, 13, 32, 58, 0, 10, 13, 32, 
	0, 10, 13, 32, 58, 0, 10, 13, 
	32, 0, 10, 13, 32, 58, 0, 10, 
	13, 32, 0, 10, 13, 32, 58, 0, 
	10, 13, 32, 0, 10, 13, 32, 58, 
	0, 10, 13, 32, 0, 10, 13, 58, 
	0, 10, 13, 0, 10, 13, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 45, 46, 47, 48, 57, 65, 90, 
	97, 122, 48, 57, 65, 90, 97, 122, 
	13, 32, 65, 90, 97, 122, 48, 57, 
	65, 90, 97, 122, 32, 33, 45, 64, 
	46, 47, 48, 57, 65, 90, 91, 96, 
	97, 122, 123, 125, 0, 10, 13, 64, 
	32, 33, 0, 10, 13, 64, 32, 33, 
	48, 49, 57, 65, 70, 71, 90, 97, 
	102, 103, 122, 32, 45, 58, 46, 47, 
	48, 57, 65, 70, 71, 90, 97, 102, 
	103, 122, 32, 45, 46, 47, 48, 57, 
	65, 90, 97, 122, 48, 57, 65, 90, 
	97, 122, 32, 45, 58, 46, 47, 48, 
	57, 65, 70, 71, 90, 97, 102, 103, 
	122, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 32, 48, 57, 
	65, 70, 97, 102, 48, 49, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 48, 49, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	48, 49, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 49, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 48, 70, 102, 49, 
	57, 65, 69, 97, 101, 58, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 48, 57, 46, 48, 57, 48, 
	57, 46, 48, 57, 48, 57, 32, 48, 
	57, 32, 48, 57, 32, 46, 48, 57, 
	46, 46, 48, 57, 46, 46, 58, 48, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	57, 65, 70, 97, 102, 58, 70, 102, 
	48, 57, 65, 69, 97, 101, 58, 70, 
	102, 48, 57, 65, 69, 97, 101, 58, 
	70, 102, 48, 57, 65, 69, 97, 101, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 97, 122, 32, 33, 64, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 0
]

class << self
	attr_accessor :_irc_single_lengths
	private :_irc_single_lengths, :_irc_single_lengths=
end
self._irc_single_lengths = [
	0, 1, 0, 0, 2, 1, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 4, 3, 3, 0, 2, 0, 
	2, 0, 4, 4, 4, 1, 3, 2, 
	0, 3, 0, 1, 0, 1, 0, 1, 
	0, 1, 0, 1, 0, 1, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	3, 1, 0, 2, 0, 1, 0, 1, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 3, 3, 3, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 3, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 0
]

class << self
	attr_accessor :_irc_range_lengths
	private :_irc_range_lengths, :_irc_range_lengths=
end
self._irc_range_lengths = [
	0, 3, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 4, 3, 
	2, 3, 6, 1, 1, 5, 6, 4, 
	3, 6, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 0, 
	3, 3, 3, 3, 3, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 4, 0, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 0
]

class << self
	attr_accessor :_irc_index_offsets
	private :_irc_index_offsets, :_irc_index_offsets=
end
self._irc_index_offsets = [
	0, 0, 5, 7, 9, 12, 14, 20, 
	25, 31, 36, 42, 47, 53, 58, 64, 
	69, 75, 80, 86, 91, 97, 102, 108, 
	113, 119, 124, 130, 135, 141, 146, 152, 
	157, 163, 168, 173, 177, 181, 187, 194, 
	198, 203, 207, 218, 224, 230, 237, 247, 
	254, 258, 268, 272, 277, 281, 286, 290, 
	295, 299, 304, 308, 313, 317, 322, 326, 
	331, 336, 341, 346, 351, 356, 361, 366, 
	371, 378, 383, 387, 393, 395, 398, 400, 
	403, 405, 408, 411, 413, 416, 418, 421, 
	423, 429, 435, 442, 449, 456, 467, 478, 
	489, 500, 511, 522, 533, 544, 555, 566, 
	577, 588, 599, 610, 619, 623, 630, 637, 
	644, 651, 658, 665, 672, 679, 686, 693, 
	700, 707, 714, 721, 728
]

class << self
	attr_accessor :_irc_trans_targs
	private :_irc_trans_targs, :_irc_trans_targs=
end
self._irc_trans_targs = [
	37, 2, 40, 40, 0, 3, 0, 4, 
	0, 5, 6, 0, 124, 0, 0, 0, 
	0, 0, 36, 7, 0, 0, 5, 8, 
	7, 0, 0, 0, 0, 36, 9, 0, 
	0, 5, 10, 9, 0, 0, 0, 0, 
	36, 11, 0, 0, 5, 12, 11, 0, 
	0, 0, 0, 36, 13, 0, 0, 5, 
	14, 13, 0, 0, 0, 0, 36, 15, 
	0, 0, 5, 16, 15, 0, 0, 0, 
	0, 36, 17, 0, 0, 5, 18, 17, 
	0, 0, 0, 0, 36, 19, 0, 0, 
	5, 20, 19, 0, 0, 0, 0, 36, 
	21, 0, 0, 5, 22, 21, 0, 0, 
	0, 0, 36, 23, 0, 0, 5, 24, 
	23, 0, 0, 0, 0, 36, 25, 0, 
	0, 5, 26, 25, 0, 0, 0, 0, 
	36, 27, 0, 0, 5, 28, 27, 0, 
	0, 0, 0, 36, 29, 0, 0, 5, 
	30, 29, 0, 0, 0, 0, 36, 31, 
	0, 0, 5, 32, 31, 0, 0, 0, 
	0, 36, 33, 0, 0, 5, 34, 33, 
	0, 0, 5, 36, 35, 0, 0, 5, 
	35, 0, 0, 5, 35, 38, 42, 123, 
	42, 123, 0, 39, 38, 41, 38, 38, 
	38, 0, 2, 40, 40, 0, 5, 6, 
	40, 40, 0, 38, 38, 38, 0, 39, 
	43, 93, 45, 41, 93, 93, 122, 93, 
	122, 0, 0, 0, 0, 0, 0, 44, 
	0, 0, 0, 45, 0, 44, 46, 49, 
	49, 47, 49, 47, 0, 39, 47, 64, 
	48, 49, 49, 47, 49, 47, 0, 39, 
	47, 48, 47, 47, 47, 0, 47, 47, 
	47, 0, 39, 47, 50, 48, 49, 49, 
	47, 49, 47, 0, 51, 51, 51, 0, 
	52, 51, 51, 51, 0, 53, 53, 53, 
	0, 54, 53, 53, 53, 0, 55, 55, 
	55, 0, 56, 55, 55, 55, 0, 57, 
	57, 57, 0, 58, 57, 57, 57, 0, 
	59, 59, 59, 0, 60, 59, 59, 59, 
	0, 61, 61, 61, 0, 62, 61, 61, 
	61, 0, 63, 63, 63, 0, 39, 63, 
	63, 63, 0, 65, 51, 51, 51, 0, 
	66, 51, 51, 51, 0, 67, 53, 53, 
	53, 0, 68, 53, 53, 53, 0, 69, 
	55, 55, 55, 0, 70, 55, 55, 55, 
	0, 71, 57, 57, 57, 0, 72, 57, 
	57, 57, 0, 73, 90, 90, 59, 59, 
	59, 0, 74, 59, 59, 59, 0, 75, 
	61, 61, 0, 76, 62, 88, 61, 61, 
	0, 77, 0, 78, 86, 0, 79, 0, 
	80, 84, 0, 81, 0, 39, 82, 0, 
	39, 83, 0, 39, 0, 80, 85, 0, 
	80, 0, 78, 87, 0, 78, 0, 76, 
	62, 89, 61, 61, 0, 76, 62, 61, 
	61, 61, 0, 60, 91, 91, 59, 59, 
	59, 0, 60, 92, 92, 59, 59, 59, 
	0, 60, 73, 73, 59, 59, 59, 0, 
	39, 43, 94, 45, 41, 94, 94, 121, 
	94, 121, 0, 39, 43, 95, 45, 41, 
	95, 95, 120, 95, 120, 0, 39, 43, 
	96, 45, 41, 96, 96, 119, 96, 119, 
	0, 39, 43, 97, 45, 41, 97, 97, 
	118, 97, 118, 0, 39, 43, 98, 45, 
	41, 98, 98, 117, 98, 117, 0, 39, 
	43, 99, 45, 41, 99, 99, 116, 99, 
	116, 0, 39, 43, 100, 45, 41, 100, 
	100, 115, 100, 115, 0, 39, 43, 101, 
	45, 41, 101, 101, 114, 101, 114, 0, 
	39, 43, 102, 45, 41, 102, 102, 113, 
	102, 113, 0, 39, 43, 103, 45, 41, 
	103, 103, 112, 103, 112, 0, 39, 43, 
	104, 45, 41, 104, 104, 111, 104, 111, 
	0, 39, 43, 105, 45, 41, 105, 105, 
	110, 105, 110, 0, 39, 43, 106, 45, 
	41, 106, 106, 109, 106, 109, 0, 39, 
	43, 107, 45, 41, 107, 107, 108, 107, 
	108, 0, 39, 43, 38, 45, 41, 38, 
	38, 38, 0, 39, 43, 45, 0, 39, 
	43, 108, 45, 108, 108, 0, 39, 43, 
	109, 45, 109, 109, 0, 39, 43, 110, 
	45, 110, 110, 0, 39, 43, 111, 45, 
	111, 111, 0, 39, 43, 112, 45, 112, 
	112, 0, 39, 43, 113, 45, 113, 113, 
	0, 39, 43, 114, 45, 114, 114, 0, 
	39, 43, 115, 45, 115, 115, 0, 39, 
	43, 116, 45, 116, 116, 0, 39, 43, 
	117, 45, 117, 117, 0, 39, 43, 118, 
	45, 118, 118, 0, 39, 43, 119, 45, 
	119, 119, 0, 39, 43, 120, 45, 120, 
	120, 0, 39, 43, 121, 45, 121, 121, 
	0, 39, 43, 122, 45, 122, 122, 0, 
	0, 0
]

class << self
	attr_accessor :_irc_trans_actions
	private :_irc_trans_actions, :_irc_trans_actions=
end
self._irc_trans_actions = [
	0, 15, 15, 15, 0, 1, 0, 1, 
	0, 30, 18, 0, 0, 0, 0, 0, 
	0, 0, 0, 24, 0, 0, 13, 0, 
	11, 0, 0, 0, 0, 0, 24, 0, 
	0, 13, 0, 11, 0, 0, 0, 0, 
	0, 24, 0, 0, 13, 0, 11, 0, 
	0, 0, 0, 0, 24, 0, 0, 13, 
	0, 11, 0, 0, 0, 0, 0, 24, 
	0, 0, 13, 0, 11, 0, 0, 0, 
	0, 0, 24, 0, 0, 13, 0, 11, 
	0, 0, 0, 0, 0, 24, 0, 0, 
	13, 0, 11, 0, 0, 0, 0, 0, 
	24, 0, 0, 13, 0, 11, 0, 0, 
	0, 0, 0, 24, 0, 0, 13, 0, 
	11, 0, 0, 0, 0, 0, 24, 0, 
	0, 13, 0, 11, 0, 0, 0, 0, 
	0, 24, 0, 0, 13, 0, 11, 0, 
	0, 0, 0, 0, 24, 0, 0, 13, 
	0, 11, 0, 0, 0, 0, 0, 24, 
	0, 0, 13, 0, 11, 0, 0, 0, 
	0, 0, 24, 0, 0, 13, 0, 11, 
	0, 0, 27, 24, 24, 0, 0, 13, 
	11, 0, 0, 27, 24, 15, 15, 15, 
	15, 15, 0, 3, 1, 1, 1, 1, 
	1, 0, 15, 15, 15, 0, 30, 18, 
	1, 1, 0, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 15, 
	0, 0, 0, 7, 0, 1, 15, 15, 
	15, 15, 15, 15, 0, 9, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 9, 
	1, 1, 1, 1, 1, 0, 1, 1, 
	1, 0, 9, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 1, 1, 0, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 1, 0, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 0, 1, 1, 1, 1, 0, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	1, 0, 1, 1, 1, 0, 9, 1, 
	1, 1, 0, 1, 1, 1, 1, 0, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 0, 1, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	0, 1, 0, 1, 1, 0, 1, 0, 
	1, 1, 0, 1, 0, 9, 1, 0, 
	9, 1, 0, 9, 0, 1, 1, 0, 
	1, 0, 1, 1, 0, 1, 0, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 1, 1, 0, 
	21, 5, 1, 5, 1, 1, 1, 1, 
	1, 1, 0, 21, 5, 1, 5, 1, 
	1, 1, 1, 1, 1, 0, 21, 5, 
	1, 5, 1, 1, 1, 1, 1, 1, 
	0, 21, 5, 1, 5, 1, 1, 1, 
	1, 1, 1, 0, 21, 5, 1, 5, 
	1, 1, 1, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 21, 5, 1, 5, 1, 1, 
	1, 1, 1, 1, 0, 21, 5, 1, 
	5, 1, 1, 1, 1, 1, 1, 0, 
	21, 5, 1, 5, 1, 1, 1, 1, 
	1, 1, 0, 21, 5, 1, 5, 1, 
	1, 1, 1, 1, 1, 0, 21, 5, 
	1, 5, 1, 1, 1, 1, 1, 1, 
	0, 21, 5, 1, 5, 1, 1, 1, 
	1, 1, 1, 0, 21, 5, 1, 5, 
	1, 1, 1, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 21, 5, 1, 5, 1, 1, 
	1, 1, 0, 5, 5, 5, 0, 5, 
	5, 1, 5, 1, 1, 0, 5, 5, 
	1, 5, 1, 1, 0, 5, 5, 1, 
	5, 1, 1, 0, 5, 5, 1, 5, 
	1, 1, 0, 5, 5, 1, 5, 1, 
	1, 0, 5, 5, 1, 5, 1, 1, 
	0, 5, 5, 1, 5, 1, 1, 0, 
	5, 5, 1, 5, 1, 1, 0, 5, 
	5, 1, 5, 1, 1, 0, 5, 5, 
	1, 5, 1, 1, 0, 5, 5, 1, 
	5, 1, 1, 0, 5, 5, 1, 5, 
	1, 1, 0, 5, 5, 1, 5, 1, 
	1, 0, 5, 5, 1, 5, 1, 1, 
	0, 5, 5, 1, 5, 1, 1, 0, 
	0, 0
]

class << self
	attr_accessor :irc_start
end
self.irc_start = 1;
class << self
	attr_accessor :irc_first_final
end
self.irc_first_final = 124;
class << self
	attr_accessor :irc_error
end
self.irc_error = 0;

class << self
	attr_accessor :irc_en_main
end
self.irc_en_main = 1;

# line 105 "irc.rl"
    
      def self.parse(data)
        
        result = {}
        buf = ""
        
        
# line 459 "parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = irc_start
end
# line 112 "irc.rl"
        
# line 467 "parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _irc_key_offsets[cs]
	_trans = _irc_index_offsets[cs]
	_klen = _irc_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _irc_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _irc_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _irc_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _irc_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _irc_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _irc_trans_targs[_trans]
	if _irc_trans_actions[_trans] != 0
		_acts = _irc_trans_actions[_trans]
		_nacts = _irc_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _irc_actions[_acts - 1]
when 0 then
# line 6 "irc.rl"
		begin

                buf = ""
        		end
# line 6 "irc.rl"
when 1 then
# line 10 "irc.rl"
		begin

                buf << data[p]
        		end
# line 10 "irc.rl"
when 2 then
# line 14 "irc.rl"
		begin

                result[:command] = buf
        		end
# line 14 "irc.rl"
when 3 then
# line 18 "irc.rl"
		begin

                result[:server] = buf
        		end
# line 18 "irc.rl"
when 4 then
# line 22 "irc.rl"
		begin

                result[:nick] = buf
        		end
# line 22 "irc.rl"
when 5 then
# line 26 "irc.rl"
		begin

                result[:user] = buf
        		end
# line 26 "irc.rl"
when 6 then
# line 30 "irc.rl"
		begin

                result[:host] = buf
        		end
# line 30 "irc.rl"
when 7 then
# line 34 "irc.rl"
		begin

                params = []
        		end
# line 34 "irc.rl"
when 8 then
# line 38 "irc.rl"
		begin

                params << ""
        		end
# line 38 "irc.rl"
when 9 then
# line 42 "irc.rl"
		begin

                params.last << data[p]
        		end
# line 42 "irc.rl"
when 10 then
# line 46 "irc.rl"
		begin

                result[:params] = params
        		end
# line 46 "irc.rl"
# line 624 "parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 113 "irc.rl"
        
        if $DEBUG
          Kernel.p :finished => cs, :consumed => p, :total => pe, :result => result
        end
        
        result
      end
    end
  end
end



# line 664 "parser.rb"
class << self
	attr_accessor :_irc_actions
	private :_irc_actions, :_irc_actions=
end
self._irc_actions = [
	0, 1, 1, 1, 3, 1, 4, 1, 
	5, 1, 6, 1, 9, 1, 10, 2, 
	0, 1, 2, 2, 7, 2, 3, 4, 
	2, 8, 9, 2, 8, 10, 3, 2, 
	7, 10
]

class << self
	attr_accessor :_irc_key_offsets
	private :_irc_key_offsets, :_irc_key_offsets=
end
self._irc_key_offsets = [
	0, 0, 7, 9, 11, 13, 14, 19, 
	23, 28, 32, 37, 41, 46, 50, 55, 
	59, 64, 68, 73, 77, 82, 86, 91, 
	95, 100, 104, 109, 113, 118, 122, 127, 
	131, 136, 140, 144, 147, 150, 160, 170, 
	176, 182, 188, 204, 210, 216, 227, 242, 
	252, 258, 273, 279, 286, 292, 299, 305, 
	312, 318, 325, 331, 338, 344, 351, 357, 
	364, 371, 378, 385, 392, 399, 406, 413, 
	420, 429, 436, 442, 450, 452, 455, 457, 
	460, 462, 465, 468, 469, 472, 473, 476, 
	477, 485, 493, 502, 511, 520, 536, 552, 
	568, 584, 600, 616, 632, 648, 664, 680, 
	696, 712, 728, 744, 756, 759, 767, 775, 
	783, 791, 799, 807, 815, 823, 831, 839, 
	847, 855, 863, 871, 879
]

class << self
	attr_accessor :_irc_trans_keys
	private :_irc_trans_keys, :_irc_trans_keys=
end
self._irc_trans_keys = [
	58, 48, 57, 65, 90, 97, 122, 48, 
	57, 48, 57, 13, 32, 10, 0, 10, 
	13, 32, 58, 0, 10, 13, 32, 0, 
	10, 13, 32, 58, 0, 10, 13, 32, 
	0, 10, 13, 32, 58, 0, 10, 13, 
	32, 0, 10, 13, 32, 58, 0, 10, 
	13, 32, 0, 10, 13, 32, 58, 0, 
	10, 13, 32, 0, 10, 13, 32, 58, 
	0, 10, 13, 32, 0, 10, 13, 32, 
	58, 0, 10, 13, 32, 0, 10, 13, 
	32, 58, 0, 10, 13, 32, 0, 10, 
	13, 32, 58, 0, 10, 13, 32, 0, 
	10, 13, 32, 58, 0, 10, 13, 32, 
	0, 10, 13, 32, 58, 0, 10, 13, 
	32, 0, 10, 13, 32, 58, 0, 10, 
	13, 32, 0, 10, 13, 32, 58, 0, 
	10, 13, 32, 0, 10, 13, 32, 58, 
	0, 10, 13, 32, 0, 10, 13, 58, 
	0, 10, 13, 0, 10, 13, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 45, 46, 47, 48, 57, 65, 90, 
	97, 122, 48, 57, 65, 90, 97, 122, 
	13, 32, 65, 90, 97, 122, 48, 57, 
	65, 90, 97, 122, 32, 33, 45, 64, 
	46, 47, 48, 57, 65, 90, 91, 96, 
	97, 122, 123, 125, 0, 10, 13, 64, 
	32, 33, 0, 10, 13, 64, 32, 33, 
	48, 49, 57, 65, 70, 71, 90, 97, 
	102, 103, 122, 32, 45, 58, 46, 47, 
	48, 57, 65, 70, 71, 90, 97, 102, 
	103, 122, 32, 45, 46, 47, 48, 57, 
	65, 90, 97, 122, 48, 57, 65, 90, 
	97, 122, 32, 45, 58, 46, 47, 48, 
	57, 65, 70, 71, 90, 97, 102, 103, 
	122, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 32, 48, 57, 
	65, 70, 97, 102, 48, 49, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 48, 49, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	48, 49, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 49, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 48, 70, 102, 49, 
	57, 65, 69, 97, 101, 58, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 48, 57, 46, 48, 57, 48, 
	57, 46, 48, 57, 48, 57, 32, 48, 
	57, 32, 48, 57, 32, 46, 48, 57, 
	46, 46, 48, 57, 46, 46, 58, 48, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	57, 65, 70, 97, 102, 58, 70, 102, 
	48, 57, 65, 69, 97, 101, 58, 70, 
	102, 48, 57, 65, 69, 97, 101, 58, 
	70, 102, 48, 57, 65, 69, 97, 101, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 91, 96, 97, 122, 123, 125, 
	32, 33, 45, 64, 46, 47, 48, 57, 
	65, 90, 97, 122, 32, 33, 64, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 32, 
	33, 45, 64, 48, 57, 65, 125, 0
]

class << self
	attr_accessor :_irc_single_lengths
	private :_irc_single_lengths, :_irc_single_lengths=
end
self._irc_single_lengths = [
	0, 1, 0, 0, 2, 1, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 5, 4, 5, 4, 5, 4, 
	5, 4, 4, 3, 3, 0, 2, 0, 
	2, 0, 4, 4, 4, 1, 3, 2, 
	0, 3, 0, 1, 0, 1, 0, 1, 
	0, 1, 0, 1, 0, 1, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	3, 1, 0, 2, 0, 1, 0, 1, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 3, 3, 3, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 3, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 0
]

class << self
	attr_accessor :_irc_range_lengths
	private :_irc_range_lengths, :_irc_range_lengths=
end
self._irc_range_lengths = [
	0, 3, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 4, 3, 
	2, 3, 6, 1, 1, 5, 6, 4, 
	3, 6, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 1, 0, 
	3, 3, 3, 3, 3, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 4, 0, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 0
]

class << self
	attr_accessor :_irc_index_offsets
	private :_irc_index_offsets, :_irc_index_offsets=
end
self._irc_index_offsets = [
	0, 0, 5, 7, 9, 12, 14, 20, 
	25, 31, 36, 42, 47, 53, 58, 64, 
	69, 75, 80, 86, 91, 97, 102, 108, 
	113, 119, 124, 130, 135, 141, 146, 152, 
	157, 163, 168, 173, 177, 181, 187, 194, 
	198, 203, 207, 218, 224, 230, 237, 247, 
	254, 258, 268, 272, 277, 281, 286, 290, 
	295, 299, 304, 308, 313, 317, 322, 326, 
	331, 336, 341, 346, 351, 356, 361, 366, 
	371, 378, 383, 387, 393, 395, 398, 400, 
	403, 405, 408, 411, 413, 416, 418, 421, 
	423, 429, 435, 442, 449, 456, 467, 478, 
	489, 500, 511, 522, 533, 544, 555, 566, 
	577, 588, 599, 610, 619, 623, 630, 637, 
	644, 651, 658, 665, 672, 679, 686, 693, 
	700, 707, 714, 721, 728
]

class << self
	attr_accessor :_irc_trans_targs
	private :_irc_trans_targs, :_irc_trans_targs=
end
self._irc_trans_targs = [
	37, 2, 40, 40, 0, 3, 0, 4, 
	0, 5, 6, 0, 124, 0, 0, 0, 
	0, 0, 36, 7, 0, 0, 5, 8, 
	7, 0, 0, 0, 0, 36, 9, 0, 
	0, 5, 10, 9, 0, 0, 0, 0, 
	36, 11, 0, 0, 5, 12, 11, 0, 
	0, 0, 0, 36, 13, 0, 0, 5, 
	14, 13, 0, 0, 0, 0, 36, 15, 
	0, 0, 5, 16, 15, 0, 0, 0, 
	0, 36, 17, 0, 0, 5, 18, 17, 
	0, 0, 0, 0, 36, 19, 0, 0, 
	5, 20, 19, 0, 0, 0, 0, 36, 
	21, 0, 0, 5, 22, 21, 0, 0, 
	0, 0, 36, 23, 0, 0, 5, 24, 
	23, 0, 0, 0, 0, 36, 25, 0, 
	0, 5, 26, 25, 0, 0, 0, 0, 
	36, 27, 0, 0, 5, 28, 27, 0, 
	0, 0, 0, 36, 29, 0, 0, 5, 
	30, 29, 0, 0, 0, 0, 36, 31, 
	0, 0, 5, 32, 31, 0, 0, 0, 
	0, 36, 33, 0, 0, 5, 34, 33, 
	0, 0, 5, 36, 35, 0, 0, 5, 
	35, 0, 0, 5, 35, 38, 42, 123, 
	42, 123, 0, 39, 38, 41, 38, 38, 
	38, 0, 2, 40, 40, 0, 5, 6, 
	40, 40, 0, 38, 38, 38, 0, 39, 
	43, 93, 45, 41, 93, 93, 122, 93, 
	122, 0, 0, 0, 0, 0, 0, 44, 
	0, 0, 0, 45, 0, 44, 46, 49, 
	49, 47, 49, 47, 0, 39, 47, 64, 
	48, 49, 49, 47, 49, 47, 0, 39, 
	47, 48, 47, 47, 47, 0, 47, 47, 
	47, 0, 39, 47, 50, 48, 49, 49, 
	47, 49, 47, 0, 51, 51, 51, 0, 
	52, 51, 51, 51, 0, 53, 53, 53, 
	0, 54, 53, 53, 53, 0, 55, 55, 
	55, 0, 56, 55, 55, 55, 0, 57, 
	57, 57, 0, 58, 57, 57, 57, 0, 
	59, 59, 59, 0, 60, 59, 59, 59, 
	0, 61, 61, 61, 0, 62, 61, 61, 
	61, 0, 63, 63, 63, 0, 39, 63, 
	63, 63, 0, 65, 51, 51, 51, 0, 
	66, 51, 51, 51, 0, 67, 53, 53, 
	53, 0, 68, 53, 53, 53, 0, 69, 
	55, 55, 55, 0, 70, 55, 55, 55, 
	0, 71, 57, 57, 57, 0, 72, 57, 
	57, 57, 0, 73, 90, 90, 59, 59, 
	59, 0, 74, 59, 59, 59, 0, 75, 
	61, 61, 0, 76, 62, 88, 61, 61, 
	0, 77, 0, 78, 86, 0, 79, 0, 
	80, 84, 0, 81, 0, 39, 82, 0, 
	39, 83, 0, 39, 0, 80, 85, 0, 
	80, 0, 78, 87, 0, 78, 0, 76, 
	62, 89, 61, 61, 0, 76, 62, 61, 
	61, 61, 0, 60, 91, 91, 59, 59, 
	59, 0, 60, 92, 92, 59, 59, 59, 
	0, 60, 73, 73, 59, 59, 59, 0, 
	39, 43, 94, 45, 41, 94, 94, 121, 
	94, 121, 0, 39, 43, 95, 45, 41, 
	95, 95, 120, 95, 120, 0, 39, 43, 
	96, 45, 41, 96, 96, 119, 96, 119, 
	0, 39, 43, 97, 45, 41, 97, 97, 
	118, 97, 118, 0, 39, 43, 98, 45, 
	41, 98, 98, 117, 98, 117, 0, 39, 
	43, 99, 45, 41, 99, 99, 116, 99, 
	116, 0, 39, 43, 100, 45, 41, 100, 
	100, 115, 100, 115, 0, 39, 43, 101, 
	45, 41, 101, 101, 114, 101, 114, 0, 
	39, 43, 102, 45, 41, 102, 102, 113, 
	102, 113, 0, 39, 43, 103, 45, 41, 
	103, 103, 112, 103, 112, 0, 39, 43, 
	104, 45, 41, 104, 104, 111, 104, 111, 
	0, 39, 43, 105, 45, 41, 105, 105, 
	110, 105, 110, 0, 39, 43, 106, 45, 
	41, 106, 106, 109, 106, 109, 0, 39, 
	43, 107, 45, 41, 107, 107, 108, 107, 
	108, 0, 39, 43, 38, 45, 41, 38, 
	38, 38, 0, 39, 43, 45, 0, 39, 
	43, 108, 45, 108, 108, 0, 39, 43, 
	109, 45, 109, 109, 0, 39, 43, 110, 
	45, 110, 110, 0, 39, 43, 111, 45, 
	111, 111, 0, 39, 43, 112, 45, 112, 
	112, 0, 39, 43, 113, 45, 113, 113, 
	0, 39, 43, 114, 45, 114, 114, 0, 
	39, 43, 115, 45, 115, 115, 0, 39, 
	43, 116, 45, 116, 116, 0, 39, 43, 
	117, 45, 117, 117, 0, 39, 43, 118, 
	45, 118, 118, 0, 39, 43, 119, 45, 
	119, 119, 0, 39, 43, 120, 45, 120, 
	120, 0, 39, 43, 121, 45, 121, 121, 
	0, 39, 43, 122, 45, 122, 122, 0, 
	0, 0
]

class << self
	attr_accessor :_irc_trans_actions
	private :_irc_trans_actions, :_irc_trans_actions=
end
self._irc_trans_actions = [
	0, 15, 15, 15, 0, 1, 0, 1, 
	0, 30, 18, 0, 0, 0, 0, 0, 
	0, 0, 0, 24, 0, 0, 13, 0, 
	11, 0, 0, 0, 0, 0, 24, 0, 
	0, 13, 0, 11, 0, 0, 0, 0, 
	0, 24, 0, 0, 13, 0, 11, 0, 
	0, 0, 0, 0, 24, 0, 0, 13, 
	0, 11, 0, 0, 0, 0, 0, 24, 
	0, 0, 13, 0, 11, 0, 0, 0, 
	0, 0, 24, 0, 0, 13, 0, 11, 
	0, 0, 0, 0, 0, 24, 0, 0, 
	13, 0, 11, 0, 0, 0, 0, 0, 
	24, 0, 0, 13, 0, 11, 0, 0, 
	0, 0, 0, 24, 0, 0, 13, 0, 
	11, 0, 0, 0, 0, 0, 24, 0, 
	0, 13, 0, 11, 0, 0, 0, 0, 
	0, 24, 0, 0, 13, 0, 11, 0, 
	0, 0, 0, 0, 24, 0, 0, 13, 
	0, 11, 0, 0, 0, 0, 0, 24, 
	0, 0, 13, 0, 11, 0, 0, 0, 
	0, 0, 24, 0, 0, 13, 0, 11, 
	0, 0, 27, 24, 24, 0, 0, 13, 
	11, 0, 0, 27, 24, 15, 15, 15, 
	15, 15, 0, 3, 1, 1, 1, 1, 
	1, 0, 15, 15, 15, 0, 30, 18, 
	1, 1, 0, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 0, 0, 0, 15, 
	0, 0, 0, 7, 0, 1, 15, 15, 
	15, 15, 15, 15, 0, 9, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 9, 
	1, 1, 1, 1, 1, 0, 1, 1, 
	1, 0, 9, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 1, 1, 0, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	0, 1, 1, 1, 1, 0, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 0, 1, 1, 1, 1, 0, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 0, 1, 1, 1, 
	1, 0, 1, 1, 1, 0, 9, 1, 
	1, 1, 0, 1, 1, 1, 1, 0, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 0, 1, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	0, 1, 0, 1, 1, 0, 1, 0, 
	1, 1, 0, 1, 0, 9, 1, 0, 
	9, 1, 0, 9, 0, 1, 1, 0, 
	1, 0, 1, 1, 0, 1, 0, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 1, 0, 1, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 1, 1, 0, 
	21, 5, 1, 5, 1, 1, 1, 1, 
	1, 1, 0, 21, 5, 1, 5, 1, 
	1, 1, 1, 1, 1, 0, 21, 5, 
	1, 5, 1, 1, 1, 1, 1, 1, 
	0, 21, 5, 1, 5, 1, 1, 1, 
	1, 1, 1, 0, 21, 5, 1, 5, 
	1, 1, 1, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 21, 5, 1, 5, 1, 1, 
	1, 1, 1, 1, 0, 21, 5, 1, 
	5, 1, 1, 1, 1, 1, 1, 0, 
	21, 5, 1, 5, 1, 1, 1, 1, 
	1, 1, 0, 21, 5, 1, 5, 1, 
	1, 1, 1, 1, 1, 0, 21, 5, 
	1, 5, 1, 1, 1, 1, 1, 1, 
	0, 21, 5, 1, 5, 1, 1, 1, 
	1, 1, 1, 0, 21, 5, 1, 5, 
	1, 1, 1, 1, 1, 1, 0, 21, 
	5, 1, 5, 1, 1, 1, 1, 1, 
	1, 0, 21, 5, 1, 5, 1, 1, 
	1, 1, 0, 5, 5, 5, 0, 5, 
	5, 1, 5, 1, 1, 0, 5, 5, 
	1, 5, 1, 1, 0, 5, 5, 1, 
	5, 1, 1, 0, 5, 5, 1, 5, 
	1, 1, 0, 5, 5, 1, 5, 1, 
	1, 0, 5, 5, 1, 5, 1, 1, 
	0, 5, 5, 1, 5, 1, 1, 0, 
	5, 5, 1, 5, 1, 1, 0, 5, 
	5, 1, 5, 1, 1, 0, 5, 5, 
	1, 5, 1, 1, 0, 5, 5, 1, 
	5, 1, 1, 0, 5, 5, 1, 5, 
	1, 1, 0, 5, 5, 1, 5, 1, 
	1, 0, 5, 5, 1, 5, 1, 1, 
	0, 5, 5, 1, 5, 1, 1, 0, 
	0, 0
]

class << self
	attr_accessor :irc_start
end
self.irc_start = 1;
class << self
	attr_accessor :irc_first_final
end
self.irc_first_final = 124;
class << self
	attr_accessor :irc_error
end
self.irc_error = 0;

class << self
	attr_accessor :irc_en_main
end
self.irc_en_main = 1;

# line 126 "irc.rl"


if __FILE__ == $0
   FBSDBot::IRC::Parser.parse(STDIN.read)
end

